{
  "hash": "b4ecc1fedf12b2217cd93b72abe8e34e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class_Ex03\"\nauthor: \"Fu wanqian\"\ndate: \"Sep 16 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n------------------------------------------------------------------------\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, ggstatsplot, tmap, tidyverse , GWmodel)\n```\n:::\n\n## Data Import and Preparation\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_sf <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `D:\\FuWanqian\\ISSS608-VAA\\Inclass_Ex\\Inclass_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nhunan <- left_join(hunan_sf,hunan2012)%>%\n  select(1:3, 7, 15, 16, 31, 32)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(County)`\n```\n\n\n:::\n:::\n\n\n#left join\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_sp = hunan%>%\n  as_Spatial()\n```\n:::\n\n\n#Determine adaptive bandwidth\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_AIC=bw.gwr(GDPPC~1,data= hunan_sp, approach = \"AIC\", adaptive = TRUE,\n             kernel=\"bisquare\", longlat = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth (number of nearest neighbours): 62 AICc value: 1923.156 \nAdaptive bandwidth (number of nearest neighbours): 46 AICc value: 1920.469 \nAdaptive bandwidth (number of nearest neighbours): 36 AICc value: 1917.324 \nAdaptive bandwidth (number of nearest neighbours): 29 AICc value: 1916.661 \nAdaptive bandwidth (number of nearest neighbours): 26 AICc value: 1914.897 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \n```\n\n\n:::\n\n```{.r .cell-code}\nbw_AIC\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 22\n```\n\n\n:::\n:::\n\n#Computationing geograohically wrighted summary statistics\n\n::: {.cell}\n\n```{.r .cell-code}\ngwstat=gwss(\n  data = hunan_sp, \n  vars = \"GDPPC\",\n  bw = bw_AIC,\n  kernel=\"bisquare\",\n  adaptive = TRUE, \n  longlat=T)\n```\n:::\n\n\n#preparing the output data\n\n::: {.cell}\n\n```{.r .cell-code}\ngwstat_df = as.data.frame(gwstat$SDF)\nhunan_gstat = cbind(hunan_sf,gwstat_df)\n```\n:::\n\n\n#Visualizing geographically weighted summary statistics\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hunan_gstat)+tm_fill(\"GDPPC_LM\",\n                              n=5,\n                              style = \"quantile\") +\n  tm_borders(alpha=0.5)+\n  tm_layout(main.title = \"Distributiuon of geographically weighted mean\",\n            main.title.position = \"center\",\n            main.title.size = 0.8,\n            legend.text.size = 1.2,\n            legend.height = 1.5,\n            legend.width = 1.5,\n            frame = TRUE)\n```\n\n::: {.cell-output-display}\n![](Inclass_04_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Inclass_04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}